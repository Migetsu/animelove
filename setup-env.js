import { createInterface } from 'readline';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

const rl = createInterface({
  input: process.stdin,
  output: process.stdout
});

const question = (query) => new Promise((resolve) => rl.question(query, resolve));

async function setupEnv() {
  console.log("\n====== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è AnimeLove ======\n");
  
  try {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const clientId = await question('–í–≤–µ–¥–∏—Ç–µ CLIENT_ID –∏–∑ Shikimori: ');
    const clientSecret = await question('–í–≤–µ–¥–∏—Ç–µ CLIENT_SECRET –∏–∑ Shikimori: ');
    const githubUsername = await question('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub: ');
    const repoName = await question('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - animelove): ') || 'animelove';
    const renderAppName = await question('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Render (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - animelove-api): ') || 'animelove-api';
    
    // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ .env
    const envContent = `CLIENT_ID=${clientId}
CLIENT_SECRET=${clientSecret}
GITHUB_PAGES_URL=https://${githubUsername}.github.io/${repoName}
RENDER_APP_NAME=${renderAppName}
RENDER_EXTERNAL_URL=https://${renderAppName}.onrender.com`;

    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    await fs.writeFile(path.join(__dirname, '.env'), envContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend
    const backendDir = path.join(__dirname, 'src', 'backend');
    await fs.mkdir(backendDir, { recursive: true });
    await fs.writeFile(path.join(backendDir, '.env'), envContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º render.yaml
    const renderYamlPath = path.join(__dirname, 'render.yaml');
    let renderYamlContent = await fs.readFile(renderYamlPath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º placeholder –∑–Ω–∞—á–µ–Ω–∏—è
    renderYamlContent = renderYamlContent
      .replace(/name: animerealm-api/g, `name: ${renderAppName}`)
      .replace(/your-github-username\/animelove\.git/g, `${githubUsername}/${repoName}.git`)
      .replace(/https:\/\/your-github-username\.github\.io\/animerealm/g, `https://${githubUsername}.github.io/${repoName}`);
    
    await fs.writeFile(renderYamlPath, renderYamlContent);
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª render.yaml');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º config.js
    const configPath = path.join(__dirname, 'src', 'config.js');
    let configContent = await fs.readFile(configPath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º placeholder –∑–Ω–∞—á–µ–Ω–∏—è
    configContent = configContent
      .replace(/const RENDER_APP_NAME = ['"].*?['"]/g, `const RENDER_APP_NAME = '${renderAppName}'`)
      .replace(/const GITHUB_USERNAME = ['"].*?['"]/g, `const GITHUB_USERNAME = '${githubUsername}'`)
      .replace(/const REPO_NAME = ['"].*?['"]/g, `const REPO_NAME = '${repoName}'`);
    
    await fs.writeFile(configPath, configContent);
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª config.js');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º vite.config.js –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –±–∞–∑–æ–≤–æ–≥–æ –ø—É—Ç–∏
    const viteConfigPath = path.join(__dirname, 'vite.config.js');
    let viteConfigContent = await fs.readFile(viteConfigPath, 'utf8');
    
    viteConfigContent = viteConfigContent
      .replace(/base: mode === 'production' \? '\/.*?\/' : '\/'/g, 
               `base: mode === 'production' ? '/${repoName}/' : '/'`);
    
    await fs.writeFile(viteConfigPath, viteConfigContent);
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª vite.config.js');
    
    console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`\nüìã –°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:
  - CLIENT_ID: ${clientId.substring(0, 5)}...${clientId.substring(clientId.length - 5)}
  - CLIENT_SECRET: ${clientSecret ? '************' : '–ù–µ –∑–∞–¥–∞–Ω!'}
  - GitHub Pages URL: https://${githubUsername}.github.io/${repoName}
  - Render App: ${renderAppName}
  - –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${repoName}
    `);
    
    console.log("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:");
    console.log("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ: npm run dev:all");
    console.log(`2. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '${repoName}'`);
    console.log(`3. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–∞–∫ remote: git remote add origin https://github.com/${githubUsername}/${repoName}.git`);
    console.log("4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: git push -u origin main");
    console.log(`5. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å –Ω–∞ Render, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π ${repoName}`);
    console.log("6. –ù–∞ Render –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è CLIENT_ID –∏ CLIENT_SECRET");
    console.log("7. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ GitHub Pages: npm run deploy");
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', error);
  } finally {
    rl.close();
  }
}

setupEnv();
