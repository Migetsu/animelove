import { exec } from 'child_process';
import { platform } from 'os';

const PORT = 3000;
const isWindows = platform() === 'win32';

console.log(`üîç –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö –ø–æ—Ä—Ç ${PORT}...`);

// –í—ã–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
const command = isWindows
  ? `netstat -ano | findstr :${PORT}`
  : `lsof -i :${PORT} | grep LISTEN`;

exec(command, (error, stdout, stderr) => {
  if (error) {
    console.log(`‚úÖ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    process.exit(0);
  }

  if (stderr) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${stderr}`);
    process.exit(1);
  }

  console.log(`üìã –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}:`);
  console.log(stdout);

  // –ò–∑–≤–ª–µ–∫–∞–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞
  let pid;
  if (isWindows) {
    // –í Windows PID –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å—Ç–æ–ª–±—Ü–µ
    const matches = stdout.match(/\s+(\d+)\s*$/m);
    pid = matches ? matches[1] : null;
  } else {
    // –í Unix/Linux/Mac PID –æ–±—ã—á–Ω–æ –≤–æ –≤—Ç–æ—Ä–æ–º —Å—Ç–æ–ª–±—Ü–µ
    const matches = stdout.match(/\S+\s+(\d+)/);
    pid = matches ? matches[1] : null;
  }

  if (!pid) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å PID –ø—Ä–æ—Ü–µ—Å—Å–∞');
    process.exit(1);
  }

  console.log(`üî™ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID: ${pid}`);

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
  const killCommand = isWindows
    ? `taskkill /F /PID ${pid}`
    : `kill -9 ${pid}`;

  exec(killCommand, (killError, killStdout, killStderr) => {
    if (killError) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: ${killError.message}`);
      process.exit(1);
    }

    if (killStderr) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: ${killStderr}`);
      process.exit(1);
    }

    console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
    console.log(killStdout);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—Ç –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω
    setTimeout(() => {
      console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ—Ä—Ç –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω...');
      exec(command, (checkError) => {
        if (checkError) {
          console.log(`‚úÖ –ü–æ—Ä—Ç ${PORT} —É—Å–ø–µ—à–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω!`);
        } else {
          console.warn(`‚ö†Ô∏è –ü–æ—Ä—Ç ${PORT} –≤—Å—ë –µ—â–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç.`);
        }
        process.exit(0);
      });
    }, 1000);
  });
});
